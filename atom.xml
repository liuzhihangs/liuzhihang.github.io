<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Notes</title>
  
  <subtitle>Notes</subtitle>
  <link href="https://liuzhihang.com/atom.xml" rel="self"/>
  
  <link href="https://liuzhihang.com/"/>
  <updated>2020-10-31T02:19:44.399Z</updated>
  <id>https://liuzhihang.com/</id>
  
  <author>
    <name>liuzhihang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【JDK源码笔记】- 写时复制集合 —— CopyOnWriteArrayList</title>
    <link href="https://liuzhihang.com/2020/10/31/copyonwritearraylist.html"/>
    <id>https://liuzhihang.com/2020/10/31/copyonwritearraylist.html</id>
    <published>2020-10-31T02:00:00.000Z</published>
    <updated>2020-10-31T02:19:44.399Z</updated>
    
    
    <summary type="html">JUC 下面还有一个系列的类，都是 CopyOnWriteXXX ，意思是写时复制，这个究竟是怎么回事？那就以 CopyOnWriteArrayList 为切入点，一起了解写时复制是怎么回事？</summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 非阻塞的无界线程安全队列 —— ConcurrentLinkedQueue</title>
    <link href="https://liuzhihang.com/2020/10/25/source-code-concurrentlinkedqueue.html"/>
    <id>https://liuzhihang.com/2020/10/25/source-code-concurrentlinkedqueue.html</id>
    <published>2020-10-25T04:30:00.000Z</published>
    <updated>2020-10-25T04:30:55.215Z</updated>
    
    
    <summary type="html">JUC 下面的相关源码继续往下阅读，这就看到了非阻塞的无界线程安全队列 —— ConcurrentLinkedQueue，来一起看看吧。</summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【工作笔记】- APP 莫名崩溃，开始以为是 Header 中 name 大小写的锅，最后发现原来是容器的错！</title>
    <link href="https://liuzhihang.com/2020/10/19/header-name-case.html"/>
    <id>https://liuzhihang.com/2020/10/19/header-name-case.html</id>
    <published>2020-10-18T23:00:00.000Z</published>
    <updated>2020-10-18T11:45:05.783Z</updated>
    
    
    <summary type="html">在自己模拟过程中，才发现和容器有关系。</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>【工作笔记】- 几行代码轻松实现跨系统传递 traceId，再也不用担心对不上日志了！</title>
    <link href="https://liuzhihang.com/2020/10/18/log-trace-id.html"/>
    <id>https://liuzhihang.com/2020/10/18/log-trace-id.html</id>
    <published>2020-10-18T05:00:00.000Z</published>
    <updated>2020-10-18T06:27:25.457Z</updated>
    
    
    <summary type="html">新项目查日志太麻烦，多台机器之间查来查去，还不知道是不是同一个请求的。打印日志时使用 MDC 在日志上添加一个 traceId，那这个 traceId 如何跨系统传递呢？</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="链路追踪" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="链路追踪" scheme="https://liuzhihang.com/tags/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/"/>
    
  </entry>
  
  <entry>
    <title>【工作笔记】- 老大问我：“建表为啥还设置个自增 id ？用流水号当主键不正好么？”</title>
    <link href="https://liuzhihang.com/2020/10/11/work-trans-why-table-id.html"/>
    <id>https://liuzhihang.com/2020/10/11/work-trans-why-table-id.html</id>
    <published>2020-10-11T05:00:00.000Z</published>
    <updated>2020-10-11T05:11:00.786Z</updated>
    
    
    <summary type="html">建表时一般设置一个 id 为自增，但是同时流水号也是唯一索引，为什么不直接用流水号当做主键呢？</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 基于链表的有界阻塞队列 —— LinkedBlockingQueue</title>
    <link href="https://liuzhihang.com/2020/10/04/source-code-linkedblockingqueue.html"/>
    <id>https://liuzhihang.com/2020/10/04/source-code-linkedblockingqueue.html</id>
    <published>2020-10-04T06:30:00.000Z</published>
    <updated>2020-10-04T06:48:58.869Z</updated>
    
    
    <summary type="html">上一节看了基于数据的有界阻塞队列 ArrayBlockingQueue 的源码，通过阅读源码了解到在 ArrayBlockingQueue 中入队列和出队列操作都是用了 ReentrantLock 来保证线程安全。下面咱们看另一种有界阻塞队列：LinkedBlockingQueue。</summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- AQS 都看完了，Condition 原理可不能少！</title>
    <link href="https://liuzhihang.com/2020/10/01/source-code-condition.html"/>
    <id>https://liuzhihang.com/2020/10/01/source-code-condition.html</id>
    <published>2020-10-01T10:00:00.000Z</published>
    <updated>2020-10-01T10:16:48.650Z</updated>
    
    
    <summary type="html">在介绍 AQS 时，其中有一个内部类叫做 ConditionObject，当时并没有进行介绍，并且在后续阅读源码时，会发现很多地方用到了 Condition ，这时就会很诧异，这个 Condition 到底有什么作用？那今天就通过阅读 Condition 源码，从而弄清楚 Condition 到底是做什么的？</summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 基于数组的有界阻塞队列 —— ArrayBlockingQueue</title>
    <link href="https://liuzhihang.com/2020/09/27/source-code-arrayblockingqueue.html"/>
    <id>https://liuzhihang.com/2020/09/27/source-code-arrayblockingqueue.html</id>
    <published>2020-09-27T14:50:00.000Z</published>
    <updated>2020-09-27T14:54:57.558Z</updated>
    
    
    <summary type="html">在阅读完和 AQS 相关的锁以及同步辅助器之后，来一起阅读 JUC 下的和队列相关的源码。先从第一个开始：ArrayBlockingQueue。</summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 使用递增计数器的线程同步工具 —— 信号量，它的原理是什么样子的？</title>
    <link href="https://liuzhihang.com/2020/09/21/source-code-semaphore.html"/>
    <id>https://liuzhihang.com/2020/09/21/source-code-semaphore.html</id>
    <published>2020-09-20T23:00:00.000Z</published>
    <updated>2020-09-21T00:04:01.368Z</updated>
    
    
    <summary type="html">在 JUC 中线程同步器除了 CountDownLatch 和 CycleBarrier ，还有一个叫做 Semaphore （信号量），同样是基于 AQS 实现的。下面来看看信号量的内部原理。</summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【工作笔记】- 你有没有想过为什么交易和退款要拆开不同的表？</title>
    <link href="https://liuzhihang.com/2020/09/19/work-trans-refund-table.html"/>
    <id>https://liuzhihang.com/2020/09/19/work-trans-refund-table.html</id>
    <published>2020-09-19T02:00:00.000Z</published>
    <updated>2020-09-19T02:02:51.081Z</updated>
    
    
    <summary type="html">近期做新项目，在设计表结构的时候，突然想起来之前面试的时候遇到的一个问题，那时候也是初出茅庐，对很多东西一知半解（当然现在也是），当时那个小哥哥问我为什么交易和退款要拆成两个表？是基于什么考虑？有什么好处和优点么？</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- CyclicBarrier 不就是比 CountDownLatch 多了个回环么？</title>
    <link href="https://liuzhihang.com/2020/09/13/source-code-cyclicbarrier.html"/>
    <id>https://liuzhihang.com/2020/09/13/source-code-cyclicbarrier.html</id>
    <published>2020-09-12T17:30:00.000Z</published>
    <updated>2020-09-12T18:05:58.207Z</updated>
    
    
    <summary type="html">看完 CountDownLatch 正准备表示一番，突然看到了一个 CyclicBarrier —— 回环屏障。沃特？回环还屏障？说比 CountDownLatch 要多一个回环，那咱可得瞧一瞧，看一看了！</summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【工具册】- 给大家介绍下，这是我的流程图软件 —— draw.io</title>
    <link href="https://liuzhihang.com/2020/09/06/source-tool-drawio.html"/>
    <id>https://liuzhihang.com/2020/09/06/source-tool-drawio.html</id>
    <published>2020-09-06T09:00:00.000Z</published>
    <updated>2020-09-12T17:22:04.211Z</updated>
    
    
    <summary type="html">之前推了一篇文章《十张图带大家看懂 ES 原理 ！明白为什么说：ES 是准实时的！》，很多小伙伴都比较好奇在文章中的图是用的什么画图软件？看那么明显的手绘风格，当然是手画的啦！（开玩笑），其实我用的是 draw.io ，下面分享我的画图软件 —— draw.io 。</summary>
    
    
    
    <category term="工具册" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E5%85%B7%E5%86%8C/"/>
    
    
    <category term="工具册" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E5%85%B7%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 快来看看！AQS 和  CountDownLatch 有怎么样的关系？</title>
    <link href="https://liuzhihang.com/2020/09/06/source-code-countdownlatch.html"/>
    <id>https://liuzhihang.com/2020/09/06/source-code-countdownlatch.html</id>
    <published>2020-09-06T04:00:00.000Z</published>
    <updated>2020-09-12T17:22:04.112Z</updated>
    
    
    <summary type="html">CountDownLatch 一个同步辅助工具，同样是基于 AQS 实现，本篇文件主要是介绍 CountDownLatch 的使用，以及源码。</summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【Elasticsearch 技术分享】—— 十张图带大家看懂 ES 原理 ！明白为什么说：ES 是准实时的！</title>
    <link href="https://liuzhihang.com/2020/08/29/technology-sharing-es-5.html"/>
    <id>https://liuzhihang.com/2020/08/29/technology-sharing-es-5.html</id>
    <published>2020-08-28T17:20:00.000Z</published>
    <updated>2020-09-12T17:22:04.165Z</updated>
    
    
    <summary type="html">说到 Elasticsearch ，其中最明显的一个特点就是 *near real-time* 准实时 —— 当文档存储在Elasticsearch中时，将在1秒内以几乎实时的方式对其进行索引和完全搜索。那为什么说 ES 是准实时的呢？</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/ELK/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>【Elasticsearch 技术分享】—— ES 查询检索数据的过程，是什么样子的？</title>
    <link href="https://liuzhihang.com/2020/08/26/technology-sharing-es-4.html"/>
    <id>https://liuzhihang.com/2020/08/26/technology-sharing-es-4.html</id>
    <published>2020-08-26T12:20:00.000Z</published>
    <updated>2020-09-12T17:22:04.178Z</updated>
    
    
    <summary type="html">ES 使用过程中常用的就是查询以及检索，那查询和检索的过程，什么样的呢？</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/ELK/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>【Elasticsearch 技术分享】—— Elasticsearch 存储一条数据， put 过程是什么样子的？</title>
    <link href="https://liuzhihang.com/2020/08/26/technology-sharing-es-3.html"/>
    <id>https://liuzhihang.com/2020/08/26/technology-sharing-es-3.html</id>
    <published>2020-08-25T16:10:00.000Z</published>
    <updated>2020-09-12T17:22:04.108Z</updated>
    
    
    <summary type="html">在前面已经介绍了 ES 中常用的一些名词，知道了数据是存储在 shard 中的，而 index 会映射一个或者多个 shard 。那这时候我要存储一条数据到某个索引下，这条数据是在哪个 index 下的呢？</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/ELK/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>【Elasticsearch 技术分享】—— ES 常用名词及结构</title>
    <link href="https://liuzhihang.com/2020/08/23/technology-sharing-es-2.html"/>
    <id>https://liuzhihang.com/2020/08/23/technology-sharing-es-2.html</id>
    <published>2020-08-23T02:00:00.000Z</published>
    <updated>2020-09-12T17:22:04.123Z</updated>
    
    
    <summary type="html">Elasticsearch 常用的名词</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/ELK/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>【Elasticsearch 技术分享】—— Elasticsearch ？倒排索引？这都是什么？</title>
    <link href="https://liuzhihang.com/2020/08/18/technology-sharing-es-1.html"/>
    <id>https://liuzhihang.com/2020/08/18/technology-sharing-es-1.html</id>
    <published>2020-08-18T05:00:00.000Z</published>
    <updated>2020-09-12T17:22:04.115Z</updated>
    
    
    <summary type="html">Elasticsearch 从入门到进门</summary>
    
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/ELK/"/>
    
    
    <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ELK" scheme="https://liuzhihang.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 除了读写锁，JUC 下面还有个 StampedLock！还不过来了解一下么？</title>
    <link href="https://liuzhihang.com/2020/08/09/source-code-stamped-lock.html"/>
    <id>https://liuzhihang.com/2020/08/09/source-code-stamped-lock.html</id>
    <published>2020-08-09T07:30:00.000Z</published>
    <updated>2020-09-12T17:22:04.225Z</updated>
    
    
    <summary type="html">为什么有了 ReentrantLock 和 ReentrantReadWriteLock 之后还要设计一个 StampedLock ？ </summary>
    
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
    <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>IDEA插件开发常用API</title>
    <link href="https://liuzhihang.com/2020/08/01/idea-plugin-development-common-api.html"/>
    <id>https://liuzhihang.com/2020/08/01/idea-plugin-development-common-api.html</id>
    <published>2020-08-01T03:58:16.000Z</published>
    <updated>2020-09-12T17:22:04.188Z</updated>
    
    
    <summary type="html">在看完 IDEA 插件开发简易教程后，小伙伴们是否迫不及待的想自己上手整一个插件了？心里规划好了一二三，但是却不知道从哪里开始下手。下面我分享下自己整理的一些常用的 API。 </summary>
    
    
    
    <category term="IDEA" scheme="https://liuzhihang.com/categories/IDEA/"/>
    
    
    <category term="plugin" scheme="https://liuzhihang.com/tags/plugin/"/>
    
  </entry>
  
</feed>
