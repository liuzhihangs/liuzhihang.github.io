<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Notes</title>
  <icon>https://www.gravatar.com/avatar/9a661d73a4ebd8479e19c696ac6daf24</icon>
  <subtitle>Notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liuzhihang.com/"/>
  <updated>2020-08-25T16:19:28.992Z</updated>
  <id>https://liuzhihang.com/</id>
  
  <author>
    <name>liuzhihang</name>
    <email>liuzhihangs@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Elasticsearch 技术分享】—— Elasticsearch 存储一条数据， put 过程是什么样子的？</title>
    <link href="https://liuzhihang.com/2020/08/26/technology-sharing-es-3.html"/>
    <id>https://liuzhihang.com/2020/08/26/technology-sharing-es-3.html</id>
    <published>2020-08-25T16:10:00.000Z</published>
    <updated>2020-08-25T16:19:28.992Z</updated>
    
    <summary type="html">
    
      在前面已经介绍了 ES 中常用的一些名词，知道了数据是存储在 shard 中的，而 index 会映射一个或者多个 shard 。那这时候我要存储一条数据到某个索引下，这条数据是在哪个 index 下的呢？
    
    </summary>
    
    
      <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ELK" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/ELK/"/>
    
    
      <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ELK" scheme="https://liuzhihang.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>【Elasticsearch 技术分享】—— ES 常用名词及结构</title>
    <link href="https://liuzhihang.com/2020/08/23/technology-sharing-es-2.html"/>
    <id>https://liuzhihang.com/2020/08/23/technology-sharing-es-2.html</id>
    <published>2020-08-23T02:00:00.000Z</published>
    <updated>2020-08-25T16:11:07.247Z</updated>
    
    <summary type="html">
    
      Elasticsearch 常用的名词
    
    </summary>
    
    
      <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ELK" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/ELK/"/>
    
    
      <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ELK" scheme="https://liuzhihang.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>【Elasticsearch 技术分享】—— Elasticsearch ？倒排索引？这都是什么？</title>
    <link href="https://liuzhihang.com/2020/08/18/technology-sharing-es-1.html"/>
    <id>https://liuzhihang.com/2020/08/18/technology-sharing-es-1.html</id>
    <published>2020-08-18T05:00:00.000Z</published>
    <updated>2020-08-23T14:44:23.945Z</updated>
    
    <summary type="html">
    
      Elasticsearch 从入门到进门
    
    </summary>
    
    
      <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ELK" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/ELK/"/>
    
    
      <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ELK" scheme="https://liuzhihang.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 除了读写锁，JUC 下面还有个 StampedLock！还不过来了解一下么？</title>
    <link href="https://liuzhihang.com/2020/08/09/source-code-stamped-lock.html"/>
    <id>https://liuzhihang.com/2020/08/09/source-code-stamped-lock.html</id>
    <published>2020-08-09T07:30:00.000Z</published>
    <updated>2020-08-10T02:07:40.773Z</updated>
    
    <summary type="html">
    
      为什么有了 ReentrantLock 和 ReentrantReadWriteLock 之后还要设计一个 StampedLock ？ 
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>IDEA插件开发常用API</title>
    <link href="https://liuzhihang.com/2020/08/01/idea-plugin-development-common-api.html"/>
    <id>https://liuzhihang.com/2020/08/01/idea-plugin-development-common-api.html</id>
    <published>2020-08-01T03:58:16.000Z</published>
    <updated>2020-08-01T04:21:41.219Z</updated>
    
    <summary type="html">
    
      在看完 IDEA 插件开发简易教程后，小伙伴们是否迫不及待的想自己上手整一个插件了？心里规划好了一二三，但是却不知道从哪里开始下手。下面我分享下自己整理的一些常用的 API。 
    
    </summary>
    
    
      <category term="IDEA" scheme="https://liuzhihang.com/categories/IDEA/"/>
    
    
      <category term="plugin" scheme="https://liuzhihang.com/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>【工具册】- IDEA 插件找不到？看这里！那就自己敲一个！</title>
    <link href="https://liuzhihang.com/2020/07/29/tool-book-copy-as-json.html"/>
    <id>https://liuzhihang.com/2020/07/29/tool-book-copy-as-json.html</id>
    <published>2020-07-29T05:00:00.000Z</published>
    <updated>2020-07-29T07:14:17.255Z</updated>
    
    <summary type="html">
    
      小伙伴你是否想亲手写一个插件，或者你是否有一些插件的想法，但是找不到插件。那就自己实现一个吧
    
    </summary>
    
    
      <category term="工具册" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E5%85%B7%E5%86%8C/"/>
    
      <category term="IDEA" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E5%85%B7%E5%86%8C/IDEA/"/>
    
    
      <category term="工具册" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E5%85%B7%E5%86%8C/"/>
    
      <category term="IDEA" scheme="https://liuzhihang.com/tags/IDEA/"/>
    
      <category term="plugin" scheme="https://liuzhihang.com/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 快进来！花几分钟看一下 ReentrantReadWriteLock 的原理！</title>
    <link href="https://liuzhihang.com/2020/07/27/source-code-reentrant-read-write-lock.html"/>
    <id>https://liuzhihang.com/2020/07/27/source-code-reentrant-read-write-lock.html</id>
    <published>2020-07-27T15:50:00.000Z</published>
    <updated>2020-07-29T06:12:41.043Z</updated>
    
    <summary type="html">
    
      在看完 ReentrantLock 之后，在高并发场景下 ReentrantLock 已经足够使用，但是因为 ReentrantLock 是独占锁，同时只有一个线程可以获取该锁，而很多应用场景都是读多写少，这时候使用 ReentrantLock 就不太合适了。读多写少的场景该如何使用？在 JUC 包下同样提供了读写锁 ReentrantReadWriteLock 来应对读多写少的场景。
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 不能再被问住了！ReentrantLock 源码、画图一起看一看！</title>
    <link href="https://liuzhihang.com/2020/07/25/source-code-reentrant-lock.html"/>
    <id>https://liuzhihang.com/2020/07/25/source-code-reentrant-lock.html</id>
    <published>2020-07-25T01:50:00.000Z</published>
    <updated>2020-07-25T01:52:02.630Z</updated>
    
    <summary type="html">
    
      在阅读完 JUC 包下的 AQS 源码之后，其中有很多疑问，最大的疑问就是 state 究竟是什么含义？并且 AQS 主要定义了队列的出入，但是获取资源、释放资源都是交给子类实现的，那子类是怎么实现的呢？ 
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【工作笔记】- 老大说新项目的结构和 xxx 项目一样就可以了，我 ……</title>
    <link href="https://liuzhihang.com/2020/07/18/work-archetype.html"/>
    <id>https://liuzhihang.com/2020/07/18/work-archetype.html</id>
    <published>2020-07-18T05:00:00.000Z</published>
    <updated>2020-07-18T12:21:15.606Z</updated>
    
    <summary type="html">
    
      又要开发新项目了，还是创建新项目，怎么办？老大说按照 xxx 项目的结构创建一个新项目就可以了。
    
    </summary>
    
    
      <category term="工作笔记" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Archetype" scheme="https://liuzhihang.com/categories/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/Archetype/"/>
    
    
      <category term="工作笔记" scheme="https://liuzhihang.com/tags/%E5%B7%A5%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Archetype" scheme="https://liuzhihang.com/tags/Archetype/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 别走！这里有个笔记：图文讲解 AQS ，一起看看 AQS 的源码……(图文较长)</title>
    <link href="https://liuzhihang.com/2020/07/12/source-code-aqs.html"/>
    <id>https://liuzhihang.com/2020/07/12/source-code-aqs.html</id>
    <published>2020-07-12T05:00:00.000Z</published>
    <updated>2020-07-12T05:34:10.034Z</updated>
    
    <summary type="html">
    
      AbstractQueuedSynchronizer 抽象队列同步器，简称 AQS 。是在 JUC 包下面一个非常重要的基础组件，JUC 包下面的并发锁 `ReentrantLock` `CountDownLatch` 等都是基于 AQS 实现的。所以想进一步研究锁的底层原理，非常有必要先了解 AQS 的原理。
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- JUC 包下工具类，它的名字叫 LockSupport ！你造么？</title>
    <link href="https://liuzhihang.com/2020/07/05/source-code-locksupport.html"/>
    <id>https://liuzhihang.com/2020/07/05/source-code-locksupport.html</id>
    <published>2020-07-05T12:20:20.000Z</published>
    <updated>2020-07-05T12:53:57.888Z</updated>
    
    <summary type="html">
    
      LockSupport 是 JUC 中常用的一个工具类，主要作用是挂起和唤醒线程。在阅读 JUC 源码中经常看到，所以很有必要了解一下。
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- JDK 8 新增的 LongAdder，得过来看一下！</title>
    <link href="https://liuzhihang.com/2020/06/28/source-code-longadder.html"/>
    <id>https://liuzhihang.com/2020/06/28/source-code-longadder.html</id>
    <published>2020-06-28T15:50:20.000Z</published>
    <updated>2020-06-28T15:29:05.376Z</updated>
    
    <summary type="html">
    
      在介绍 AtomicInteger 时，已经说明在高并发下大量线程去竞争更新同一个原子变量时，因为只有一个线程能够更新成功，其他的线程在竞争失败后，只能一直循环，不断的进行 CAS 尝试，从而浪费了 CPU 资源。而在 JDK 8 中新增了 LongAdder 用来解决高并发下变量的原子操作。
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 请介绍下你了解的ThreadLocal，它的底层原理！</title>
    <link href="https://liuzhihang.com/2020/06/21/source-code-threadlocal.html"/>
    <id>https://liuzhihang.com/2020/06/21/source-code-threadlocal.html</id>
    <published>2020-06-21T02:00:00.000Z</published>
    <updated>2020-06-21T03:35:47.932Z</updated>
    
    <summary type="html">
    
      什么是红黑树？在HashMap中是怎么应用的？
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- 从JUC源码看CAS，我做了个笔记 ......</title>
    <link href="https://liuzhihang.com/2020/06/12/source-code-cas.html"/>
    <id>https://liuzhihang.com/2020/06/12/source-code-cas.html</id>
    <published>2020-06-12T15:50:20.000Z</published>
    <updated>2020-06-12T15:37:39.802Z</updated>
    
    <summary type="html">
    
      JUC包下大量使用了CAS，工作和面试中也经常遇到CAS，包括说到乐观锁，也不可避免的想起CAS，那CAS究竟是什么？
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- HashMap红黑树</title>
    <link href="https://liuzhihang.com/2020/05/25/source-code-hashmap-red-black-tree.html"/>
    <id>https://liuzhihang.com/2020/05/25/source-code-hashmap-red-black-tree.html</id>
    <published>2020-05-25T12:50:20.000Z</published>
    <updated>2020-05-26T07:54:53.710Z</updated>
    
    <summary type="html">
    
      什么是红黑树？在HashMap中是怎么应用的？
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- HashMap扩容</title>
    <link href="https://liuzhihang.com/2020/05/17/source-code-hashmap-resize.html"/>
    <id>https://liuzhihang.com/2020/05/17/source-code-hashmap-resize.html</id>
    <published>2020-05-17T12:50:20.000Z</published>
    <updated>2020-05-18T06:45:17.866Z</updated>
    
    <summary type="html">
    
      HashMap初始化参数, 底层实现原理, put()流程, resize()扩容流程等源码阅读记录 ...
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>【JDK源码笔记】- HashMap的初始化</title>
    <link href="https://liuzhihang.com/2020/05/11/source-code-hashmap-init.html"/>
    <id>https://liuzhihang.com/2020/05/11/source-code-hashmap-init.html</id>
    <published>2020-05-11T10:50:20.000Z</published>
    <updated>2020-05-18T06:45:00.579Z</updated>
    
    <summary type="html">
    
      HashMap初始化参数, 底层实现原理, put()流程, resize()扩容流程等源码阅读记录 ...
    
    </summary>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/categories/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/JDK/"/>
    
    
      <category term="源码笔记" scheme="https://liuzhihang.com/tags/%E6%BA%90%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JDK" scheme="https://liuzhihang.com/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>markdown代码折叠</title>
    <link href="https://liuzhihang.com/2020/04/20/markdown-code-folding.html"/>
    <id>https://liuzhihang.com/2020/04/20/markdown-code-folding.html</id>
    <published>2020-04-20T07:20:20.000Z</published>
    <updated>2020-04-22T11:58:05.810Z</updated>
    
    <summary type="html">
    
      在markdown中折叠一部分内容, 点击可以展开.
    
    </summary>
    
    
      <category term="markdown" scheme="https://liuzhihang.com/categories/markdown/"/>
    
    
      <category term="markdown" scheme="https://liuzhihang.com/tags/markdown/"/>
    
      <category term="小技巧" scheme="https://liuzhihang.com/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>雪花算法</title>
    <link href="https://liuzhihang.com/2020/04/13/snowflake-algorithm.html"/>
    <id>https://liuzhihang.com/2020/04/13/snowflake-algorithm.html</id>
    <published>2020-04-13T08:03:09.000Z</published>
    <updated>2020-06-01T02:20:18.654Z</updated>
    
    <summary type="html">
    
      雪花算法简单介绍, 以及如何使用雪花算法, 生成流水号. 一个简易的流水号生成器.
    
    </summary>
    
    
      <category term="分布式" scheme="https://liuzhihang.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="分布式" scheme="https://liuzhihang.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="流水号" scheme="https://liuzhihang.com/tags/%E6%B5%81%E6%B0%B4%E5%8F%B7/"/>
    
      <category term="雪花算法" scheme="https://liuzhihang.com/tags/%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>项目启动失败:java.lang.NoClassDefFoundError</title>
    <link href="https://liuzhihang.com/2020/04/12/no-class-def-found-error-rule-configuration.html"/>
    <id>https://liuzhihang.com/2020/04/12/no-class-def-found-error-rule-configuration.html</id>
    <published>2020-04-12T05:20:48.000Z</published>
    <updated>2020-04-12T05:38:39.467Z</updated>
    
    <summary type="html">
    
      遇到项目启动失败, 报错信息: ... nested exception is java.lang.NoClassDefFoundError: org/apache/shardingsphere/api/config/RuleConfiguration ...
    
    </summary>
    
    
      <category term="issue" scheme="https://liuzhihang.com/categories/issue/"/>
    
    
      <category term="error" scheme="https://liuzhihang.com/tags/error/"/>
    
  </entry>
  
</feed>
